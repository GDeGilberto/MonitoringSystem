@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Infrastructure.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>¿Olvidaste tu contraseña?</PageTitle>

<div class="container min-vh-100 d-flex align-items-center py-5">
    <div class="row justify-content-center gx-5">
        <!-- Tarjeta del formulario -->
        <div class="col-lg-5 col-md-8 mb-5 mb-lg-0">
            <div class="card border-0 shadow-lg rounded-3 overflow-hidden">
                <div class="card-header bg-primary text-white py-4">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-key-fill fs-1 me-3"></i>
                        <div>
                            <h2 class="h4 mb-0">Recuperar contraseña</h2>
                            <p class="small mb-0">Ingresa tu correo electrónico</p>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4 p-md-5">
                    <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="alert alert-danger" role="alert" />

                        <div class="form-floating mb-4">
                            <InputText @bind-Value="Input.Email" class="form-control" id="email"
                                       autocomplete="username" aria-required="true" placeholder="name@example.com" />
                            <label for="email">Correo electrónico</label>
                            <ValidationMessage For="() => Input.Email" class="text-danger small mt-1" />
                        </div>

                        <button type="submit" class="w-100 btn btn-primary btn-lg rounded-pill py-3 fw-bold">
                            <i class="bi bi-envelope-check me-2"></i>Enviar enlace
                        </button>
                    </EditForm>

                    <div class="text-center mt-4">
                        <a href="/Account/Login" class="text-decoration-none">
                            <i class="bi bi-arrow-left me-1"></i>Volver al inicio de sesión
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sección informativa -->
        <div class="col-lg-5 col-md-8 d-flex flex-column justify-content-center">
            <div class="text-center px-lg-5">
                
                <h3 class="fw-bold mb-3">¿Olvidaste tu contraseña?</h3>
                <p class="lead text-muted mb-4">
                    No te preocupes, es normal. Ingresa tu correo electrónico registrado y te enviaremos un enlace seguro para restablecer tu contraseña.
                </p>

                <div class="bg-light p-4 rounded-3">
                    <h4 class="h6 fw-bold mb-3"><i class="bi bi-info-circle-fill text-primary me-2"></i>¿Qué esperar?</h4>
                    <ul class="small text-start">
                        <li class="mb-2">Recibirás un correo con un enlace seguro</li>
                        <li class="mb-2">El enlace expirará en 24 horas</li>
                        <li>Si no ves el correo, revisa tu carpeta de spam</li>
                    </ul>
                </div>
                <img src="/svg/undraw_forgot-password_odai.svg" class="img-fluid mb-4" style="max-height: 250px;" alt="Ilustración de recuperación de contraseña" />
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}